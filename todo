- tests + ci/cd pipeline
    - Test spider (mock session and fixture detail, jobs etc)
    - where do we put the factories? fixture vs factories
- autoformat, autosort on commit?
- basic react fonrtend
- proper logging to debug containers
- change passwords, add best practices to store them etc, - we have to run uviron from /home/ubuntu because inside it woudnt find jobjob and causes everything to crash
- Dockerfiles (environment, build images etc)

- master/slave Databases
- add queues for triggering spiders and wait for results redis/kafka/rq/arq/dramatiq/memcached - diff with background process is thath background process execute on same process, dramatiq/celery etc run them on new process (this is good if its heavy processing)
- kubernetes
- aws devops guide on reddit
- cache to avoid hitting DB everytime
- continuous monitoring/logging of services (prometheus?)
- stress tests
- run spider periodically
- best practices / more architecture
- tools: elasticsearch?


#=====================
docker-compose up --build

================================================
================================================
===== DATABASE
# Auto remove container on stop, and store data under postgres-data
docker run --rm --name db-pg -e POSTGRES_PASSWORD=postgres -p 5432:5432 -v $HOME/repos/z-pablo/thejobjob/.docker_volumes/postgres:/var/lib/postgresql/data -d postgres:12

# get in
docker exec -it db-pg psql -U postgres

================================================
================================================
===== API 
# Run server on 0.0.0.0:8000
uvicorn webapp.main:app --host 0.0.0.0 --port 8000 --reload


================================================
================================================
===== SPIDER API
# Run server on 0.0.0.0:8001
uvicorn spider_app.spider_api:app --host 0.0.0.0 --port 8001 --reload


====================================================================================
====================================================================================
====================================================================================
====================================================================================
Future:
- separate test involving DB from unit tests
- add cache/table of skills by query to avoid hitting the DB every new search (refresh every week?)
- weekly run of the spider for all jobs?
- Refactor spider by responsibilities
- Get currency for jobs in SO as we cant tell now by salaries
- add indeed - https://rss.indeed.com/rss?q=python error-feedparser.py 3933 aprox,
    linkedin, google for jobs, glassdoor, dice