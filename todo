- tests + ci/cd pipeline
    - test crud operations
        https://medium.com/@mariusz.raczynski2/pytest-mock-how-to-mock-your-database-connection-5c84docker 
        https://stackoverflow.com/questions/23325669/writting-py-test-for-sqlalchemy-app
- basic react fonrtend
- proper logging to debug containers
- change passwords, add best practices to store them etc, 
- Dockerfiles (environment, build images etc)

- master/slave Databases
- add queues for triggering spiders and wait for results redis/kafka- celery
- kubernetes
- aws devops guide on reddit
- cache to avoid hitting DB everytime
- continuous monitoring/logging of services (prometheus?)
- stress tests
- run spider periodically
- best practices / more architecture
- tools: elasticsearch?


#=====================
docker-compose up --build

================================================
================================================
===== DATABASE
# Auto remove container on stop, and store data under postgres-data
docker run --rm --name db-pg -e POSTGRES_PASSWORD=postgres -p 5432:5432 -v $HOME/repos/z-pablo/jobjob/.docker_volumes/postgres:/var/lib/postgresql/data -d postgres:12

# get in
docker exec -it db-pg psql -U postgres

================================================
================================================
===== API 
# Run server on 0.0.0.0:8000
uvicorn webapp.main:app --host 0.0.0.0 --port 8000 --reload


================================================
================================================
===== SPIDER API
# Run server on 0.0.0.0:8001
uvicorn spider_app.spider_api:app --host 0.0.0.0 --port 8001 --reload


====================================================================================
====================================================================================
====================================================================================
====================================================================================
Future:
- add cache/table of skills by query to avoid hitting the DB every new search (refresh every week?)
- weekly run of the spider for all jobs?
- Refactor spider by responsibilities
- Get currency for jobs in SO as we cant tell now by salaries
- add indeed - https://rss.indeed.com/rss?q=python error-feedparser.py 3933 aprox,
    linkedin, google for jobs, glassdoor, dice